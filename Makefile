# Makefile para o Sistema de Monitoramento Rocks

.PHONY: help install dev test prod clean run test-server

# Vari√°veis
PYTHON = python
PIP = pip
VENV = .venv
PYTHON_VENV = $(VENV)/Scripts/python
PIP_VENV = $(VENV)/Scripts/pip

# Comandos padr√£o
help:
	@echo "Sistema de Monitoramento Rocks - Comandos dispon√≠veis:"
	@echo ""
	@echo "  install     - Instala depend√™ncias"
	@echo "  dev         - Executa em modo desenvolvimento"
	@echo "  test        - Executa em modo teste"
	@echo "  prod        - Executa em modo produ√ß√£o"
	@echo "  run         - Executa aplica√ß√£o principal"
	@echo "  test-server - Inicia servidor de teste"
	@echo "  clean       - Limpa arquivos tempor√°rios"
	@echo "  format      - Formata c√≥digo com black"
	@echo "  lint        - Executa linting com flake8"

# Instala√ß√£o
install:
	@echo "Instalando depend√™ncias..."
	$(PYTHON) -m venv $(VENV)
	$(PIP_VENV) install -r requirements.txt
	@echo "Depend√™ncias instaladas com sucesso!"

# Desenvolvimento
dev:
	@echo "Executando em modo desenvolvimento..."
	$(PYTHON_VENV) -c "import config_dev; print('Configura√ß√£o de desenvolvimento carregada')"

# Teste
test:
	@echo "Executando em modo teste..."
	$(PYTHON_VENV) -c "import config_test; print('Configura√ß√£o de teste carregada')"

# Produ√ß√£o
prod:
	@echo "Executando em modo produ√ß√£o..."
	$(PYTHON_VENV) -c "import config_prod; print('Configura√ß√£o de produ√ß√£o carregada')"

# Executar aplica√ß√£o
run:
	@echo "Iniciando aplica√ß√£o..."
	$(PYTHON_VENV) main.py

# Servidor de teste
test-server:
	@echo "Iniciando servidor de teste..."
	cd tests && $(PYTHON_VENV) test_complete_server.py

# Limpeza
clean:
	@echo "Limpando arquivos tempor√°rios..."
	rm -rf __pycache__/
	rm -rf */__pycache__/
	rm -rf .pytest_cache/
	rm -rf .coverage
	rm -rf htmlcov/
	@echo "Limpeza conclu√≠da!"

# Formata√ß√£o de c√≥digo
format:
	@echo "Formatando c√≥digo..."
	$(PIP_VENV) install black
	$(PYTHON_VENV) -m black .

# Linting
lint:
	@echo "Executando linting..."
	$(PIP_VENV) install flake8
	$(PYTHON_VENV) -m flake8 .

# Monitoramento em background
monitor:
	@echo "Iniciando monitoramento em background..."
	$(PYTHON_VENV) scripts/background_monitor.py

# Verificar estrutura
check:
	@echo "Verificando estrutura do projeto..."
	@echo "üìÅ Estrutura atual:"
	@tree -I '__pycache__|.venv|.git' -a

